Index: src/main/java/brickdestroyer/view/GameBoardView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package brickdestroyer.view;\r\n\r\nimport brickdestroyer.model.game.GameBoardModel;\r\nimport brickdestroyer.model.abstract_entities.Ball;\r\nimport brickdestroyer.model.abstract_entities.Brick;\r\nimport brickdestroyer.model.entities.Player;\r\nimport brickdestroyer.model.game.GameLogic;\r\nimport javafx.scene.canvas.Canvas;\r\nimport javafx.scene.canvas.GraphicsContext;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.shape.Path;\r\n\r\nimport java.util.Objects;\r\n\r\n\r\npublic class GameBoardView {\r\n\r\n    private final GameLogic gameLogic;\r\n    private final GameBoardModel gameBoardModel;\r\n\r\n    private final Canvas canvas;\r\n    private final GraphicsContext gc;\r\n\r\n    public GameBoardView(GameBoardModel gameBoardModel, GameLogic gameLogic) {\r\n        this.gameBoardModel = gameBoardModel;\r\n        this.gameLogic = gameLogic;\r\n\r\n        canvas = new Canvas(GameBoardModel.DEF_WIDTH, GameBoardModel.DEF_HEIGHT);\r\n        canvas.setFocusTraversable(true);\r\n        gc = canvas.getGraphicsContext2D();\r\n    }\r\n\r\n    public void paint() {\r\n        gc.clearRect(0,0,GameBoardModel.DEF_WIDTH, GameBoardModel.DEF_HEIGHT);\r\n        drawBall(gameLogic.getBall(),gc);\r\n\r\n        drawMessage(gameBoardModel.getMessage(), gc);\r\n\r\n        for(Brick brick : gameLogic.getBricks())\r\n            if(brick.isBroken()) {\r\n                drawBrick(brick, gc);\r\n                if(Objects.equals(brick.getName(), \"Cement Brick\"))\r\n                    drawCrack(brick.getCrackPath(), gc);\r\n            }\r\n\r\n        drawPlayer(gameLogic.getPlayer(),gc);\r\n    }\r\n\r\n    private void drawMessage(String message, GraphicsContext gc) {\r\n        gc.setFill(Color.BLUE);\r\n        gc.fillText(message, 250,225);\r\n    }\r\n\r\n    private void drawCrack(Path crackPath, GraphicsContext gc) {\r\n        if (crackPath != null && !crackPath.getElements().isEmpty()) {\r\n\r\n            gc.beginPath();\r\n            for (int step = 0; step < Brick.DEF_STEPS; step++) {\r\n                String[] positionXY = parseStringPath(crackPath, step);\r\n                if (step == 0)\r\n                    gc.moveTo(Double.parseDouble(positionXY[0]), Double.parseDouble(positionXY[1]));\r\n                gc.lineTo(Double.parseDouble(positionXY[0]), Double.parseDouble(positionXY[1]));\r\n            }\r\n            gc.fill();\r\n            gc.closePath();\r\n            gc.stroke();\r\n        }\r\n    }\r\n\r\n    private String[] parseStringPath(Path crackPath, int index) {\r\n        String path = crackPath.getElements().get(index).toString();\r\n        return path.replaceAll(\"[a-zA-Z]\",\"\").replaceAll(\"[=]\",\"\").replaceAll(\"[\\\\[-\\\\]]\",\"\").split(\", \");\r\n    }\r\n\r\n    private void drawBrick(Brick brick, GraphicsContext gc) {\r\n        gc.setFill(brick.getInnerColor());\r\n        gc.fillRect(brick.getPosition().getX(),brick.getPosition().getY(),brick.getSize().getWidth(),brick.getSize().getHeight());\r\n\r\n        gc.setFill(brick.getBorderColor());\r\n        gc.strokeRect(brick.getPosition().getX(),brick.getPosition().getY(),brick.getSize().getWidth(),brick.getSize().getHeight());\r\n    }\r\n\r\n    private void drawPlayer(Player player, GraphicsContext gc) {\r\n        gc.setFill(player.getInnerColor());\r\n        gc.fillRect(player.getXUpperLeft(),player.getYUpperLeft(),player.getWidth(), player.getHeight());\r\n\r\n        gc.setStroke(player.getBorderColor());\r\n        gc.strokeRect(player.getXUpperLeft(), player.getYUpperLeft(), player.getWidth(), player.getHeight());\r\n    }\r\n\r\n    private void drawBall(Ball ball, GraphicsContext gc) {\r\n        gc.setFill(ball.getInnerColor());\r\n        gc.fillOval(ball.getUpperLeftX(),ball.getUpperLeftY(),ball.getRadius(),ball.getRadius());\r\n\r\n        gc.setStroke(ball.getBorderColor());\r\n        gc.strokeOval(ball.getUpperLeftX(),ball.getUpperLeftY(),ball.getRadius(),ball.getRadius());\r\n    }\r\n\r\n    public void repaintMessage(String message) {\r\n        gameBoardModel.setMessage(message);\r\n        paint();\r\n    }\r\n\r\n    public Canvas getCanvas() {return canvas;}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/brickdestroyer/view/GameBoardView.java b/src/main/java/brickdestroyer/view/GameBoardView.java
--- a/src/main/java/brickdestroyer/view/GameBoardView.java	(revision 073a4b13bc216504622dcc97e308e3ff15c44b26)
+++ b/src/main/java/brickdestroyer/view/GameBoardView.java	(date 1639167998784)
@@ -13,6 +13,9 @@
 import java.util.Objects;
 
 
+/**
+ *
+ */
 public class GameBoardView {
 
     private final GameLogic gameLogic;
